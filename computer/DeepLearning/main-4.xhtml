<?xml version="1.0" encoding="UTF-8"?>

<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta name="charset" content="UTF-8"/><title></title><link rel="stylesheet" href="main.css" type="text/css"/>
</head>
<body><h2><span class="font66" style="font-weight:bold;">Chapter 1</span></h2><h2><a id="bookmark0"></a><span class="font67" style="font-weight:bold;">Introduction</span></h2>
<p><span class="font64">Inventors have long dreamed of creating machines that think. This desire dates back to at least the time of ancient Greece. The mythical figures Pygmalion,&#160;Daedalus, and Hephaestus may all be interpreted as legendary inventors, and&#160;Galatea, Talos, and Pandora may all be regarded as artificial life (Ovid and Martin,&#160;2004; Sparkes, 1996; Tandy, 1997).</span></p>
<p><span class="font64">When programmable computers were first conceived, people wondered whether they might become intelligent, over a hundred years before one was built (Lovelace,&#160;1842). Today, </span><span class="font64" style="font-weight:bold;font-style:italic;">artificial intelligence (AI)</span><span class="font64"> is a thriving field with many practical&#160;applications and active research topics. We look to intelligent software to automate&#160;routine labor, understand speech or images, make diagnoses in medicine and&#160;support basic scientific research.</span></p>
<p><span class="font64">In the early days of artificial intelligence, the field rapidly tackled and solved problems that are intellectually difficult for human beings but relatively straightforward for computers—problems that can be described by a list of formal, mathematical rules. The true challenge to artificial intelligence proved to be solving&#160;the tasks that are easy for people to perform but hard for people to describe&#160;formally—problems that we solve intuitively, that feel automatic, like recognizing&#160;spoken words or faces in images.</span></p>
<p><span class="font64">This book is about a solution to these more intuitive problems. This solution is to allow computers to learn from experience and understand the world in terms of a&#160;hierarchy of concepts, with each concept defined in terms of its relation to simpler&#160;concepts. By gathering knowledge from experience, this approach avoids the need&#160;for human operators to formally specify all of the knowledge that the computer&#160;needs. The hierarchy of concepts allows the computer to learn complicated concepts&#160;by building them out of simpler ones. If we draw a graph showing how these&#160;concepts are built on top of each other, the graph is deep, with many layers. For&#160;this reason, we call this approach to AI </span><span class="font64" style="font-weight:bold;font-style:italic;">deep learning.</span></p>
<p><span class="font64">Many of the early successes of AI took place in relatively sterile and formal environments and did not require computers to have much knowledge about&#160;the world. For example, IBM’s Deep Blue chess-playing system defeated world&#160;champion Garry Kasparov in 1997 (Hsu, 2002). Chess is of course a very simple&#160;world, containing only sixty-four locations and thirty-two pieces that can move&#160;in only rigidly circumscribed ways. Devising a successful chess strategy is a&#160;tremendous accomplishment, but the challenge is not due to the difficulty of&#160;describing the set of chess pieces and allowable moves to the computer. Chess&#160;can be completely described by a very brief list of completely formal rules, easily&#160;provided ahead of time by the programmer.</span></p>
<p><span class="font64">Ironically, abstract and formal tasks that are among the most difficult mental undertakings for a human being are among the easiest for a computer. Computers&#160;have long been able to defeat even the best human chess player, but are only&#160;recently matching some of the abilities of average human beings to recognize objects&#160;or speech. A person’s everyday life requires an immense amount of knowledge&#160;about the world. Much of this knowledge is subjective and intuitive, and therefore&#160;difficult to articulate in a formal way. Computers need to capture this same&#160;knowledge in order to behave in an intelligent way. One of the key challenges in&#160;artificial intelligence is how to get this informal knowledge into a computer.</span></p>
<p><span class="font64">Several artificial intelligence projects have sought to hard-code knowledge about the world in formal languages. A computer can reason about statements in these&#160;formal languages automatically using logical inference rules. This is known as the&#160;</span><span class="font64" style="font-weight:bold;font-style:italic;">knowledge base</span><span class="font64"> approach to artificial intelligence. None of these projects has led to&#160;a major success. One of the most famous such projects is Cyc (Lenat and Guha,&#160;1989). Cyc is an inference engine and a database of statements in a language&#160;called CycL. These statements are entered by a staff of human supervisors. It is an&#160;unwieldy process. People struggle to devise formal rules with enough complexity&#160;to accurately describe the world. For example, Cyc failed to understand a story&#160;about a person named Fred shaving in the morning (Linde, 1992). Its inference&#160;engine detected an inconsistency in the story: it knew that people do not have&#160;electrical parts, but because Fred was holding an electric razor, it believed the&#160;entity “FredWhileShaving” contained electrical parts. It therefore asked whether&#160;Fred was still a person while he was shaving.</span></p>
<p><span class="font64">The difficulties faced by systems relying on hard-coded knowledge suggest that AI systems need the ability to acquire their own knowledge, by extracting patterns&#160;from raw data. This capability is known as </span><span class="font64" style="font-weight:bold;font-style:italic;">machine learning.</span><span class="font64"> The introduction&#160;of machine learning allowed computers to tackle problems involving knowledge&#160;of the real world and make decisions that appear subjective. A simple machine&#160;learning algorithm called </span><span class="font64" style="font-weight:bold;font-style:italic;">logistic regression</span><span class="font64"> can determine whether to recommend&#160;cesarean delivery (Mor-Yosef </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1990). A simple machine learning algorithm&#160;called </span><span class="font64" style="font-weight:bold;font-style:italic;">naive Bayes</span><span class="font64"> can separate legitimate e-mail from spam e-mail.</span></p>
<p><span class="font64">The performance of these simple machine learning algorithms depends heavily on the </span><span class="font64" style="font-weight:bold;font-style:italic;">representation</span><span class="font64"> of the data they are given. For example, when logistic&#160;regression is used to recommend cesarean delivery, the AI system does not examine&#160;the patient directly. Instead, the doctor tells the system several pieces of relevant&#160;information, such as the presence or absence of a uterine scar. Each piece of&#160;information included in the representation of the patient is known as a </span><span class="font64" style="font-weight:bold;font-style:italic;">feature.&#160;</span><span class="font64">Logistic regression learns how each of these features of the patient correlates with&#160;various outcomes. However, it cannot influence the way that the features are&#160;defined in any way. If logistic regression was given an MRI scan of the patient,&#160;rather than the doctor’s formalized report, it would not be able to make useful&#160;predictions. Individual pixels in an MRI scan have negligible correlation with any&#160;complications that might occur during delivery.</span></p>
<p><span class="font64">This dependence on representations is a general phenomenon that appears throughout computer science and even daily life. In computer science, operations such as searching a collection of data can proceed exponentially faster if&#160;the collection is structured and indexed intelligently. People can easily perform&#160;arithmetic on Arabic numerals, but find arithmetic on Roman numerals much&#160;more time-consuming. It is not surprising that the choice of representation has an&#160;enormous effect on the performance of machine learning algorithms. For a simple&#160;visual example, see Fig. 1.1.</span></p>
<p><span class="font64">Many artificial intelligence tasks can be solved by designing the right set of features to extract for that task, then providing these features to a simple machine&#160;learning algorithm. For example, a useful feature for speaker identification from&#160;sound is an estimate of the size of speaker’s vocal tract. It therefore gives a strong&#160;clue as to whether the speaker is a man, woman, or child.</span></p>
<p><span class="font64">However, for many tasks, it is difficult to know what features should be extracted. For example, suppose that we would like to write a program to detect cars in&#160;photographs. We know that cars have wheels, so we might like to use the presence&#160;of a wheel as a feature. Unfortunately, it is difficult to describe exactly what a&#160;wheel looks like in terms of pixel values. A wheel has a simple geometric shape but&#160;its image may be complicated by shadows falling on the wheel, the sun glaring off&#160;the metal parts of the wheel, the fender of the car or an object in the foreground&#160;obscuring part of the wheel, and so on.</span></p>
<p><span class="font64">Polar coordinates</span></p><div><div>
<p><span class="font64">Cartesian coordinates</span></p><img src="main-1.jpg" alt=""/>
<p><span class="font64">X</span></p></div></div><div><div>
<p dir="rtl"><span class="font64">הס</span></p><img src="main-2.jpg" alt=""/></div></div><div><div><img src="main-3.jpg" alt=""/></div></div>
<p><span class="font63">r</span></p>
<p><span class="font64">Figure 1.1: Example of different representations: suppose we want to separate two categories of data by drawing a line between them in a scatterplot. In the plot on the left,&#160;we represent some data using Cartesian coordinates, and the task is impossible. In the plot&#160;on the right, we represent the data with polar coordinates and the task becomes simple to&#160;solve with a vertical line. (Figure produced in collaboration with David Warde-Farley)</span></p>
<p><span class="font64">One solution to this problem is to use machine learning to discover not only the mapping from representation to output but also the representation itself.&#160;This approach is known as </span><span class="font64" style="font-weight:bold;font-style:italic;">representation learning.</span><span class="font64"> Learned representations often&#160;result in much better performance than can be obtained with hand-designed&#160;representations. They also allow AI systems to rapidly adapt to new tasks, with&#160;minimal human intervention. A representation learning algorithm can discover a&#160;good set of features for a simple task in minutes, or a complex task in hours to&#160;months. Manually designing features for a complex task requires a great deal of&#160;human time and effort; it can take decades for an entire community of researchers.</span></p>
<p><span class="font64">The quintessential example of a representation learning algorithm is the </span><span class="font64" style="font-weight:bold;font-style:italic;">autoencoder.</span><span class="font64"> An autoencoder is the combination of an </span><span class="font64" style="font-weight:bold;font-style:italic;">encoder</span><span class="font64"> function that converts the input data into a different representation, and a </span><span class="font64" style="font-weight:bold;font-style:italic;">decoder</span><span class="font64"> function that converts&#160;the new representation back into the original format. Autoencoders are trained to&#160;preserve as much information as possible when an input is run through the encoder&#160;and then the decoder, but are also trained to make the new representation have&#160;various nice properties. Different kinds of autoencoders aim to achieve different&#160;kinds of properties.</span></p>
<p><span class="font64">When designing features or algorithms for learning features, our goal is usually to separate the </span><span class="font64" style="font-weight:bold;font-style:italic;">factors of variation</span><span class="font64"> that explain the observed data. In this context,&#160;we use the word “factors” simply to refer to separate sources of influence; the factors&#160;are usually not combined by multiplication. Such factors are often not quantities&#160;that are directly observed. Instead, they may exist either as unobserved objects&#160;or unobserved forces in the physical world that affect observable quantities. They&#160;may also exist as constructs in the human mind that provide useful simplifying&#160;explanations or inferred causes of the observed data. They can be thought of as&#160;concepts or abstractions that help us make sense of the rich variability in the data.&#160;When analyzing a speech recording, the factors of variation include the speaker’s&#160;age, their sex, their accent and the words that they are speaking. When analyzing&#160;an image of a car, the factors of variation include the position of the car, its color,&#160;and the angle and brightness of the sun.</span></p>
<p><span class="font64">A major source of difficulty in many real-world artificial intelligence applications is that many of the factors of variation influence every single piece of data we are&#160;able to observe. The individual pixels in an image of a red car might be very close&#160;to black at night. The shape of the car’s silhouette depends on the viewing angle.&#160;Most applications require us to </span><span class="font64" style="font-weight:bold;font-style:italic;">disentangle</span><span class="font64"> the factors of variation and discard the&#160;ones that we do not care about.</span></p>
<p><span class="font64">Of course, it can be very difficult to extract such high-level, abstract features from raw data. Many of these factors of variation, such as a speaker’s accent,&#160;can be identified only using sophisticated, nearly human-level understanding of&#160;the data. When it is nearly as difficult to obtain a representation as to solve the&#160;original problem, representation learning does not, at first glance, seem to help us.</span></p>
<p><span class="font64" style="font-weight:bold;font-style:italic;">Deep learning</span><span class="font64"> solves this central problem in representation learning by introducing representations that are expressed in terms of other, simpler representations. Deep learning allows the computer to build complex concepts out of simpler concepts. Fig. 1.2 shows how a deep learning system can represent the concept of an&#160;image of a person by combining simpler concepts, such as corners and contours,&#160;which are in turn defined in terms of edges.</span></p>
<p><span class="font64">The quintessential example of a deep learning model is the feedforward deep network or </span><span class="font64" style="font-weight:bold;font-style:italic;">multilayer perceptron</span><span class="font64"> (MLP). A multilayer perceptron is just a mathematical function mapping some set of input values to output values. The function&#160;is formed by composing many simpler functions. We can think of each application&#160;of a different mathematical function as providing a new representation of the input.</span></p>
<p><span class="font64">The idea of learning the right representation for the data provides one perspective on deep learning. Another perspective on deep learning is that depth allows the computer to learn a multi-step computer program. Each layer of the representation&#160;can be thought of as the state of the computer’s memory after executing another&#160;set of instructions in parallel. Networks with greater depth can execute more&#160;instructions in sequence. Sequential instructions offer great power because later&#160;instructions can refer back to the results of earlier instructions. According to this</span></p><div><div><img src="main-4.jpg" alt=""/>
<p><span class="font63">Output</span></p>
<p><span class="font63">(object identity)</span></p>
<p><span class="font63">3rd hidden layer (object parts)</span></p>
<p><span class="font63">2nd hidden layer (corners and&#160;contours)</span></p>
<p><span class="font63">1st hidden layer (edges)</span></p>
<p><span class="font63">Visible layer (input pixels)</span></p></div></div>
<p><span class="font64">Figure 1.2: Illustration of a deep learning model. It is difficult for a computer to understand the meaning of raw sensory input data, such as this image represented as a collection&#160;of pixel values. The function mapping from a set of pixels to an object identity is very&#160;complicated. Learning or evaluating this mapping seems insurmountable if tackled directly.&#160;Deep learning resolves this difficulty by breaking the desired complicated mapping into a&#160;series of nested simple mappings, each described by a different layer of the model. The&#160;input is presented at the </span><span class="font64" style="font-style:italic;">visible layer</span><span class="font64">, so named because it contains the variables that we&#160;are able to observe. Then a series of </span><span class="font64" style="font-style:italic;">hidden layers</span><span class="font64"> extracts increasingly abstract features&#160;from the image. These layers are called “hidden” because their values are not given in&#160;the data; instead the model must determine which concepts are useful for explaining&#160;the relationships in the observed data. The images here are visualizations of the kind&#160;of feature represented by each hidden unit. Given the pixels, the first layer can easily&#160;identify edges, by comparing the brightness of neighboring pixels. Given the first hidden&#160;layer’s description of the edges, the second hidden layer can easily search for corners and&#160;extended contours, which are recognizable as collections of edges. Given the second hidden&#160;layer’s description of the image in terms of corners and contours, the third hidden layer&#160;can detect entire parts of specific objects, by finding specific collections of contours and&#160;corners. Finally, this description of the image in terms of the object parts it contains can&#160;be used to recognize the objects present in the image. Images reproduced with permission&#160;from Zeiler and Fergus (2014).</span></p><div><img src="main-5.jpg" alt=""/>
<p><span class="font64">Figure 1.3: Illustration of computational graphs mapping an input to an output where each node performs an operation. Depth is the length of the longest path from input to&#160;output but depends on the definition of what constitutes a possible computational step.&#160;The computation depicted in these graphs is the output of a logistic regression model,&#160;a(w<sup>T</sup></span><span class="font64" style="font-weight:bold;font-style:italic;">x</span><span class="font64">), where a is the logistic sigmoid function. If we use addition, multiplication and&#160;logistic sigmoids as the elements of our computer language, then this model has depth&#160;three. If we view logistic regression as an element itself, then this model has depth one.</span></p></div>
<p><span class="font64">view of deep learning, not all of the information in a layer’s activations necessarily encodes factors of variation that explain the input. The representation also stores&#160;state information that helps to execute a program that can make sense of the input.&#160;This state information could be analogous to a counter or pointer in a traditional&#160;computer program. It has nothing to do with the content of the input specifically,&#160;but it helps the model to organize its processing.</span></p>
<p><span class="font64">There are two main ways of measuring the depth of a model. The first view is based on the number of sequential instructions that must be executed to evaluate&#160;the architecture. We can think of this as the length of the longest path through&#160;a flow chart that describes how to compute each of the model’s outputs given&#160;its inputs. Just as two equivalent computer programs will have different lengths&#160;depending on which language the program is written in, the same function may be&#160;drawn as a flowchart with different depths depending on which functions we allow&#160;to be used as individual steps in the flowchart. Fig. 1.3 illustrates how this choice&#160;of language can give two different measurements for the same architecture.</span></p>
<p><span class="font64">Another approach, used by deep probabilistic models, regards the depth of a model as being not the depth of the computational graph but the depth of the&#160;graph describing how concepts are related to each other. In this case, the depth&#160;of the flowchart of the computations needed to compute the representation of&#160;each concept may be much deeper than the graph of the concepts themselves.&#160;This is because the system’s understanding of the simpler concepts can be refined&#160;given information about the more complex concepts. For example, an AI system&#160;observing an image of a face with one eye in shadow may initially only see one eye.&#160;After detecting that a face is present, it can then infer that a second eye is probably&#160;present as well. In this case, the graph of concepts only includes two layers—a&#160;layer for eyes and a layer for faces—but the graph of computations includes 2n&#160;layers if we refine our estimate of each concept given the other n times.</span></p>
<p><span class="font64">Because it is not always clear which of these two views—the depth of the computational graph, or the depth of the probabilistic modeling graph—is most&#160;relevant, and because different people choose different sets of smallest elements&#160;from which to construct their graphs, there is no single correct value for the&#160;depth of an architecture, just as there is no single correct value for the length of&#160;a computer program. Nor is there a consensus about how much depth a model&#160;requires to qualify as “deep.” However, deep learning can safely be regarded as the&#160;study of models that either involve a greater amount of composition of learned&#160;functions or learned concepts than traditional machine learning does.</span></p>
<p><span class="font64">To summarize, deep learning, the subject of this book, is an approach to AI. Specifically, it is a type of machine learning, a technique that allows computer&#160;systems to improve with experience and data. According to the authors of this&#160;book, machine learning is the only viable approach to building AI systems that&#160;can operate in complicated, real-world environments. Deep learning is a particular&#160;kind of machine learning that achieves great power and flexibility by learning to&#160;represent the world as a nested hierarchy of concepts, with each concept defined in&#160;relation to simpler concepts, and more abstract representations computed in terms&#160;of less abstract ones. Fig. 1.4 illustrates the relationship between these different&#160;AI disciplines. Fig. 1.5 gives a high-level schematic of how each works.</span></p><h4><a id="bookmark1"></a><span class="font65" style="font-weight:bold;">1.1 Who Should Read This Book?</span></h4>
<p><span class="font64">This book can be useful for a variety of readers, but we wrote it with two main target audiences in mind. One of these target audiences is university students&#160;(undergraduate or graduate) learning about machine learning, including those who&#160;are beginning a career in deep learning and artificial intelligence research. The&#160;other target audience is software engineers who do not have a machine learning&#160;or statistics background, but want to rapidly acquire one and begin using deep&#160;learning in their product or platform. Deep learning has already proven useful in&#160;many software disciplines including computer vision, speech and audio processing,</span></p><div><div><img src="main-6.jpg" alt=""/>
<p><span class="font64">Figure 1.4: A Venn diagram showing how deep learning is a kind of representation learning, which is in turn a kind of machine learning, which is used for many but not all approaches&#160;to AI. Each section of the Venn diagram includes an example of an AI technology.</span></p></div></div><div><img src="main-7.jpg" alt=""/>
<p><span class="font63"><sup>systems</sup> &#160;&#160;&#160;l<sub>ear</sub>ning&#160;&#160;&#160;&#160;Representation</span></p>
<p><span class="font63">learning</span></p>
<p><span class="font64">Figure 1.5: Flowcharts showing how the different parts of an AI system relate to each other within different AI disciplines. Shaded boxes indicate components that are able to&#160;learn from data.</span></p></div>
<p><span class="font64">natural language processing, robotics, bioinformatics and chemistry, video games, search engines, online advertising and finance.</span></p>
<p><span class="font64">This book has been organized into three parts in order to best accommodate a variety of readers. Part I introduces basic mathematical tools and machine learning&#160;concepts. Part II describes the most established deep learning algorithms that are&#160;essentially solved technologies. Part III describes more speculative ideas that are&#160;widely believed to be important for future research in deep learning.</span></p>
<p><span class="font64">Readers should feel free to skip parts that are not relevant given their interests or background. Readers familiar with linear algebra, probability, and fundamental&#160;machine learning concepts can skip Part I, for example, while readers who just want&#160;to implement a working system need not read beyond Part II. To help choose which&#160;chapters to read, Fig. 1.6 provides a flowchart showing the high-level organization&#160;of the book.</span></p>
<p><span class="font64">We do assume that all readers come from a computer science background. We assume familiarity with programming, a basic understanding of computational&#160;performance issues, complexity theory, introductory level calculus and some of the&#160;terminology of graph theory.</span></p><h4><a id="bookmark2"></a><span class="font65" style="font-weight:bold;">1.2 Historical Trends in Deep Learning</span></h4>
<p><span class="font64">It is easiest to understand deep learning with some historical context. Rather than providing a detailed history of deep learning, we identify a few key trends:</span></p>
<p><span class="font64">• &#160;&#160;&#160;Deep learning has had a long and rich history, but has gone by many names&#160;reflecting different philosophical viewpoints, and has waxed and waned in&#160;popularity.</span></p>
<p><span class="font64">• &#160;&#160;&#160;Deep learning has become more useful as the amount of available training&#160;data has increased.</span></p>
<p><span class="font64">• &#160;&#160;&#160;Deep learning models have grown in size over time as computer hardware&#160;and software infrastructure for deep learning has improved.</span></p>
<p><span class="font64">• &#160;&#160;&#160;Deep learning has solved increasingly complicated applications with increasing&#160;accuracy over time.</span></p><div><div><img src="main-8.jpg" alt=""/>
<p><span class="font64">Figure 1.6: The high-level organization of the book. An arrow from one chapter to another indicates that the former chapter is prerequisite material for understanding the latter.</span></p></div></div><h5><a id="bookmark3"></a><span class="font64" style="font-weight:bold;">1.2.1 The Many Names and Changing Fortunes of Neural Networks</span></h5>
<p><span class="font64">We expect that many readers of this book have heard of deep learning as an exciting new technology, and are surprised to see a mention of “history” in a book&#160;about an emerging field. In fact, deep learning dates back to the 1940s. Deep&#160;learning only </span><span class="font64" style="font-weight:bold;font-style:italic;">appears</span><span class="font64"> to be new, because it was relatively unpopular for several&#160;years preceding its current popularity, and because it has gone through many&#160;different names, and has only recently become called “deep learning.” The field&#160;has been rebranded many times, reflecting the influence of different researchers&#160;and different perspectives.</span></p>
<p><span class="font64">A comprehensive history of deep learning is beyond the scope of this textbook. However, some basic context is useful for understanding deep learning. Broadly&#160;speaking, there have been three waves of development of deep learning: deep learning known as </span><span class="font64" style="font-weight:bold;font-style:italic;">cybernetics</span><span class="font64"> in the 1940s-1960s, deep learning known as </span><span class="font64" style="font-weight:bold;font-style:italic;">connectionism&#160;</span><span class="font64">in the 1980s-1990s, and the current resurgence under the name deep learning&#160;beginning in 2006. This is quantitatively illustrated in Fig. 1.7.</span></p>
<p><span class="font64">Some of the earliest learning algorithms we recognize today were intended to be computational models of biological learning, i.e. models of how learning&#160;happens or could happen in the brain. As a result, one of the names that deep&#160;learning has gone by is </span><span class="font64" style="font-weight:bold;font-style:italic;">artificial neural networks</span><span class="font64"> (ANNs). The corresponding&#160;perspective on deep learning models is that they are engineered systems inspired&#160;by the biological brain (whether the human brain or the brain of another animal).&#160;While the kinds of neural networks used for machine learning have sometimes&#160;been used to understand brain function (Hinton and Shallice, 1991), they are&#160;generally not designed to be realistic models of biological function. The neural&#160;perspective on deep learning is motivated by two main ideas. One idea is that&#160;the brain provides a proof by example that intelligent behavior is possible, and a&#160;conceptually straightforward path to building intelligence is to reverse engineer the&#160;computational principles behind the brain and duplicate its functionality. Another&#160;perspective is that it would be deeply interesting to understand the brain and the&#160;principles that underlie human intelligence, so machine learning models that shed&#160;light on these basic scientific questions are useful apart from their ability to solve&#160;engineering applications.</span></p>
<p><span class="font64">The modern term “deep learning” goes beyond the neuroscientific perspective on the current breed of machine learning models. It appeals to a more general&#160;principle of learning </span><span class="font64" style="font-weight:bold;font-style:italic;">multiple levels of composition,</span><span class="font64"> which can be applied in machine&#160;learning frameworks that are not necessarily neurally inspired.</span></p><div><img src="main-9.jpg" alt=""/></div><div><div><img src="main-10.jpg" alt=""/>
<p><span class="font64">Figure 1.7: The figure shows two of the three historical waves of artificial neural nets research, as measured by the frequency of the phrases “cybernetics” and “connectionism” or&#160;“neural networks” according to Google Books (the third wave is too recent to appear). The&#160;first wave started with cybernetics in the 1940s-1960s, with the development of theories&#160;of biological learning (McCulloch and Pitts, 1943; Hebb, 1949) and implementations of&#160;the first models such as the perceptron (Rosenblatt, 1958) allowing the training of a single&#160;neuron. The second wave started with the connectionist approach of the 1980-1995 period,&#160;with back-propagation (Rumelhart </span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 1986a) to train a neural network with one or two&#160;hidden layers. The current and third wave, deep learning, started around 2006 (Hinton&#160;</span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 2006; Bengio </span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 2007; Ranzato </span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 2007a), and is just now appearing in book&#160;form as of 2016. The other two waves similarly appeared in book form much later than&#160;the corresponding scientific activity occurred.</span></p></div></div>
<p><span class="font64">The earliest predecessors of modern deep learning were simple linear models motivated from a neuroscientific perspective. These models were designed to&#160;take a set of n input values </span><span class="font64" style="font-weight:bold;font-style:italic;">x</span><span class="font62" style="font-style:italic;">1</span><span class="font64">,..., x<sub>n</sub> and associate them with an output </span><span class="font64" style="font-weight:bold;font-style:italic;">y.&#160;</span><span class="font64">These models would learn a set of weights </span><span class="font64" style="font-weight:bold;font-style:italic;">w</span><span class="font62" style="font-style:italic;">1</span><span class="font64">,..., </span><span class="font64" style="font-weight:bold;font-style:italic;">w<sub>n</sub></span><span class="font64"> and compute their output&#160;f </span><span class="font64" style="font-weight:bold;font-style:italic;">(x, w</span><span class="font64">) = x </span><span class="font18">1</span><span class="font64">w</span><span class="font18">1</span><span class="font64"> + ■ ■ ■ + x<sub>n</sub> w<sub>n</sub>. This first wave of neural networks research was&#160;known as </span><span class="font64" style="font-weight:bold;font-style:italic;">cybernetics</span><span class="font64">, as illustrated in Fig. 1.7.</span></p>
<p><span class="font64">The McCulloch-Pitts Neuron (McCulloch and Pitts, 1943) was an early model of brain function. This linear model could recognize two different categories of&#160;inputs by testing whether f (x, w) is positive or negative. Of course, for the model&#160;to correspond to the desired definition of the categories, the weights needed to be&#160;set correctly. These weights could be set by the human operator. In the 1950s,&#160;the perceptron (Rosenblatt, 1958, 1962) became the first model that could learn&#160;the weights defining the categories given examples of inputs from each category.&#160;The </span><span class="font64" style="font-weight:bold;font-style:italic;">adaptive linear element</span><span class="font64"> (ADALINE), which dates from about the same time,&#160;simply returned the value of f (x) itself to predict a real number (Widrow and&#160;Hoff, 1960), and could also learn to predict these numbers from data.</span></p>
<p><span class="font64">These simple learning algorithms greatly affected the modern landscape of machine learning. The training algorithm used to adapt the weights of the ADA-LINE was a special case of an algorithm called </span><span class="font64" style="font-weight:bold;font-style:italic;">stochastic gradient descent.</span><span class="font64"> Slightly&#160;modified versions of the stochastic gradient descent algorithm remain the dominant&#160;training algorithms for deep learning models today.</span></p>
<p><span class="font64">Models based on the f(x, w) used by the perceptron and ADALINE are called </span><span class="font64" style="font-weight:bold;font-style:italic;">linea,r models.</span><span class="font64"> These models remain some of the most widely used machine learning&#160;models, though in many cases they are trained in different ways than the original&#160;models were trained.</span></p>
<p><span class="font64">Linear models have many limitations. Most famously, they cannot learn the XOR function, where f ([0,1] , w) = 1 and f ([1,0], w) = 1 but f ([1,1], w) = 0&#160;and f ([0, 0], w) = 0. Critics who observed these flaws in linear models caused&#160;a backlash against biologically inspired learning in general (Minsky and Papert,&#160;1969). This was the first major dip in the popularity of neural networks.</span></p>
<p><span class="font64">Today, neuroscience is regarded as an important source of inspiration for deep learning researchers, but it is no longer the predominant guide for the field.</span></p>
<p><span class="font64">The main reason for the diminished role of neuroscience in deep learning research today is that we simply do not have enough information about the brain&#160;to use it as a guide. To obtain a deep understanding of the actual algorithms used&#160;by the brain, we would need to be able to monitor the activity of (at the very&#160;least) thousands of interconnected neurons simultaneously. Because we are not&#160;able to do this, we are far from understanding even some of the most simple and</span></p>
<p><span class="font64">well-studied parts of the brain (Olshausen and Field, 2005).</span></p>
<p><span class="font64">Neuroscience has given us a reason to hope that a single deep learning algorithm can solve many different tasks. Neuroscientists have found that ferrets can learn to&#160;“see” with the auditory processing region of their brain if their brains are rewired&#160;to send visual signals to that area (Von Melchner </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2000). This suggests that&#160;much of the mammalian brain might use a single algorithm to solve most of the&#160;different tasks that the brain solves. Before this hypothesis, machine learning&#160;research was more fragmented, with different communities of researchers studying&#160;natural language processing, vision, motion planning and speech recognition. Today,&#160;these application communities are still separate, but it is common for deep learning&#160;research groups to study many or even all of these application areas simultaneously.</span></p>
<p><span class="font64">We are able to draw some rough guidelines from neuroscience. The basic idea of having many computational units that become intelligent only via their interactions&#160;with each other is inspired by the brain. The Neocognitron (Fukushima, 1980)&#160;introduced a powerful model architecture for processing images that was inspired&#160;by the structure of the mammalian visual system and later became the basis for&#160;the modern convolutional network (LeCun </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1998b), as we will see in Sec. 9.10.&#160;Most neural networks today are based on a model neuron called the </span><span class="font64" style="font-weight:bold;font-style:italic;">rectified linear&#160;unit.</span><span class="font64"> The original Cognitron (Fukushima, 1975) introduced a more complicated&#160;version that was highly inspired by our knowledge of brain function. The simplified&#160;modern version was developed incorporating ideas from many viewpoints, with Nair&#160;and Hinton (2010) and Glorot </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.</span><span class="font64"> (2011a) citing neuroscience as an influence, and&#160;Jarrett </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.</span><span class="font64"> (2009) citing more engineering-oriented influences. While neuroscience&#160;is an important source of inspiration, it need not be taken as a rigid guide. We&#160;know that actual neurons compute very different functions than modern rectified&#160;linear units, but greater neural realism has not yet led to an improvement in&#160;machine learning performance. Also, while neuroscience has successfully inspired&#160;several neural network architectures, we do not yet know enough about biological&#160;learning for neuroscience to offer much guidance for the learning algorithms we&#160;use to train these architectures.</span></p>
<p><span class="font64">Media accounts often emphasize the similarity of deep learning to the brain. While it is true that deep learning researchers are more likely to cite the brain as an&#160;influence than researchers working in other machine learning fields such as kernel&#160;machines or Bayesian statistics, one should not view deep learning as an attempt&#160;to simulate the brain. Modern deep learning draws inspiration from many fields,&#160;especially applied math fundamentals like linear algebra, probability, information&#160;theory, and numerical optimization. While some deep learning researchers cite&#160;neuroscience as an important source of inspiration, others are not concerned with</span></p>
<p><span class="font64">neuroscience at all.</span></p>
<p><span class="font64">It is worth noting that the effort to understand how the brain works on an algorithmic level is alive and well. This endeavor is primarily known as&#160;“computational neuroscience” and is a separate field of study from deep learning.&#160;It is common for researchers to move back and forth between both fields. The&#160;field of deep learning is primarily concerned with how to build computer systems&#160;that are able to successfully solve tasks requiring intelligence, while the field of&#160;computational neuroscience is primarily concerned with building more accurate&#160;models of how the brain actually works.</span></p>
<p><span class="font64">In the 1980s, the second wave of neural network research emerged in great part via a movement called </span><span class="font64" style="font-weight:bold;font-style:italic;">connectionism</span><span class="font64"> or </span><span class="font64" style="font-weight:bold;font-style:italic;">parallel distributed processing</span><span class="font64"> (Rumelhart&#160;</span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1986c; McClelland </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1995). Connectionism arose in the context of&#160;cognitive science. Cognitive science is an interdisciplinary approach to understanding the mind, combining multiple different levels of analysis. During the early&#160;1980s, most cognitive scientists studied models of symbolic reasoning. Despite their&#160;popularity, symbolic models were difficult to explain in terms of how the brain&#160;could actually implement them using neurons. The connectionists began to study&#160;models of cognition that could actually be grounded in neural implementations&#160;(Touretzky and Minton, 1985), reviving many ideas dating back to the work of&#160;psychologist Donald Hebb in the 1940s (Hebb, 1949).</span></p>
<p><span class="font64">The central idea in connectionism is that a large number of simple computational units can achieve intelligent behavior when networked together. This insight&#160;applies equally to neurons in biological nervous systems and to hidden units in&#160;computational models.</span></p>
<p><span class="font64">Several key concepts arose during the connectionism movement of the 1980s that remain central to today’s deep learning.</span></p>
<p><span class="font64">One of these concepts is that of </span><span class="font64" style="font-weight:bold;font-style:italic;">distributed representation</span><span class="font64"> (Hinton </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1986). This is the idea that each input to a system should be represented by many features,&#160;and each feature should be involved in the representation of many possible inputs.&#160;For example, suppose we have a vision system that can recognize cars, trucks, and&#160;birds and these objects can each be red, green, or blue. One way of representing&#160;these inputs would be to have a separate neuron or hidden unit that activates for&#160;each of the nine possible combinations: red truck, red car, red bird, green truck, and&#160;so on. This requires nine different neurons, and each neuron must independently&#160;learn the concept of color and object identity. One way to improve on this situation&#160;is to use a distributed representation, with three neurons describing the color and&#160;three neurons describing the object identity. This requires only six neurons total&#160;instead of nine, and the neuron describing redness is able to learn about redness</span></p>
<p><span class="font64">from images of cars, trucks and birds, not only from images of one specific category of objects. The concept of distributed representation is central to this book, and&#160;will be described in greater detail in Chapter 15.</span></p>
<p><span class="font64">Another major accomplishment of the connectionist movement was the successful use of back-propagation to train deep neural networks with internal representations and the popularization of the back-propagation algorithm (Rumelhart </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1986a; LeCun, 1987). This algorithm has waxed and waned in popularity&#160;but as of this writing is currently the dominant approach to training deep models.</span></p>
<p><span class="font64">During the 1990s, researchers made important advances in modeling sequences with neural networks. Hochreiter (1991) and Bengio </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.</span><span class="font64"> (1994) identified some&#160;of the fundamental mathematical difficulties in modeling long sequences, described&#160;in Sec. 10.7. Hochreiter and Schmidhuber (1997) introduced the long short-term&#160;memory or LSTM network to resolve some of these difficulties. Today, the LSTM&#160;is widely used for many sequence modeling tasks, including many natural language&#160;processing tasks at Google.</span></p>
<p><span class="font64">The second wave of neural networks research lasted until the mid-1990s. Ventures based on neural networks and other AI technologies began to make unrealistically ambitious claims while seeking investments. When AI research did not fulfill these unreasonable expectations, investors were disappointed. Simultaneously,&#160;other fields of machine learning made advances. Kernel machines (Boser </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,&#160;</span><span class="font64">1992; Cortes and Vapnik, 1995; Scholkopf </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1999) and graphical models (Jordan, 1998) both achieved good results on many important tasks. These two factors&#160;led to a decline in the popularity of neural networks that lasted until 2007.</span></p>
<p><span class="font64">During this time, neural networks continued to obtain impressive performance on some tasks (LeCun </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1998b; Bengio </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2001). The Canadian Institute&#160;for Advanced Research (CIFAR) helped to keep neural networks research alive&#160;via its Neural Computation and Adaptive Perception (NCAP) research initiative.&#160;This program united machine learning research groups led by Geoffrey Hinton&#160;at University of Toronto, Yoshua Bengio at University of Montreal, and Yann&#160;LeCun at New York University. The CIFAR NCAP research initiative had a&#160;multi-disciplinary nature that also included neuroscientists and experts in human&#160;and computer vision.</span></p>
<p><span class="font64">At this point in time, deep networks were generally believed to be very difficult to train. We now know that algorithms that have existed since the 1980s work&#160;quite well, but this was not apparent circa 2006. The issue is perhaps simply that&#160;these algorithms were too computationally costly to allow much experimentation&#160;with the hardware available at the time.</span></p>
<p><span class="font64">The third wave of neural networks research began with a breakthrough in 2006. Geoffrey Hinton showed that a kind of neural network called a deep belief&#160;network could be efficiently trained using a strategy called greedy layer-wise&#160;pretraining (Hinton </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2006), which will be described in more detail in Sec.</span></p>
<p><span class="font64">15.1. The other CIFAR-affiliated research groups quickly showed that the same&#160;strategy could be used to train many other kinds of deep networks (Bengio </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,&#160;</span><span class="font64">2007; Ranzato </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2007a) and systematically helped to improve generalization&#160;on test examples. This wave of neural networks research popularized the use of the&#160;term </span><span class="font64" style="font-weight:bold;font-style:italic;">deep learning</span><span class="font64"> to emphasize that researchers were now able to train deeper&#160;neural networks than had been possible before, and to focus attention on the&#160;theoretical importance of depth (Bengio and LeCun, 2007; Delalleau and Bengio,&#160;2011; Pascanu </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2014a; Montufar </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2014). At this time, deep neural&#160;networks outperformed competing AI systems based on other machine learning&#160;technologies as well as hand-designed functionality. This third wave of popularity&#160;of neural networks continues to the time of this writing, though the focus of deep&#160;learning research has changed dramatically within the time of this wave. The&#160;third wave began with a focus on new unsupervised learning techniques and the&#160;ability of deep models to generalize well from small datasets, but today there is&#160;more interest in much older supervised learning algorithms and the ability of deep&#160;models to leverage large labeled datasets.</span></p><h5><a id="bookmark4"></a><span class="font64" style="font-weight:bold;">1.2.2 Increasing Dataset Sizes</span></h5>
<p><span class="font64">One may wonder why deep learning has only recently become recognized as a crucial technology though the first experiments with artificial neural networks were&#160;conducted in the 1950s. Deep learning has been successfully used in commercial&#160;applications since the 1990s, but was often regarded as being more of an art than&#160;a technology and something that only an expert could use, until recently. It is true&#160;that some skill is required to get good performance from a deep learning algorithm.&#160;Fortunately, the amount of skill required reduces as the amount of training data&#160;increases. The learning algorithms reaching human performance on complex tasks&#160;today are nearly identical to the learning algorithms that struggled to solve toy&#160;problems in the 1980s, though the models we train with these algorithms have&#160;undergone changes that simplify the training of very deep architectures. The most&#160;important new development is that today we can provide these algorithms with&#160;the resources they need to succeed. Fig. 1.8 shows how the size of benchmark&#160;datasets has increased remarkably over time. This trend is driven by the increasing&#160;digitization of society. As more and more of our activities take place on computers,&#160;more and more of what we do is recorded. As our computers are increasingly&#160;networked together, it becomes easier to centralize these records and curate them&#160;into a dataset appropriate for machine learning applications. The age of “Big&#160;Data” has made machine learning much easier because the key burden of statistical&#160;estimation—generalizing well to new data after observing only a small amount&#160;of data—has been considerably lightened. As of 2016, a rough rule of thumb&#160;is that a supervised deep learning algorithm will generally achieve acceptable&#160;performance with around 5,000 labeled examples per category, and will match or&#160;exceed human performance when trained with a dataset containing at least 10&#160;million labeled examples. Working successfully with datasets smaller than this is&#160;an important research area, focusing in particular on how we can take advantage&#160;of large quantities of unlabeled examples, with unsupervised or semi-supervised&#160;learning.</span></p><h5><a id="bookmark5"></a><span class="font64" style="font-weight:bold;">1.2.3 Increasing Model Sizes</span></h5>
<p><span class="font64">Another key reason that neural networks are wildly successful today after enjoying comparatively little success since the 1980s is that we have the computational&#160;resources to run much larger models today. One of the main insights of connection-ism is that animals become intelligent when many of their neurons work together.&#160;An individual neuron or small collection of neurons is not particularly useful.</span></p>
<p><span class="font64">Biological neurons are not especially densely connected. As seen in Fig. 1.10, our machine learning models have had a number of connections per neuron that&#160;was within an order of magnitude of even mammalian brains for decades.</span></p>
<p><span class="font64">In terms of the total number of neurons, neural networks have been astonishingly small until quite recently, as shown in Fig. 1.11. Since the introduction of hidden&#160;units, artificial neural networks have doubled in size roughly every 2.4 years. This&#160;growth is driven by faster computers with larger memory and by the availability&#160;of larger datasets. Larger networks are able to achieve higher accuracy on more&#160;complex tasks. This trend looks set to continue for decades. Unless new technologies&#160;allow faster scaling, artificial neural networks will not have the same number of&#160;neurons as the human brain until at least the 2050s. Biological neurons may&#160;represent more complicated functions than current artificial neurons, so biological&#160;neural networks may be even larger than this plot portrays.</span></p>
<p><span class="font64">In retrospect, it is not particularly surprising that neural networks with fewer neurons than a leech were unable to solve sophisticated artificial intelligence problems. Even today’s networks, which we consider quite large from a computational&#160;systems point of view, are smaller than the nervous system of even relatively&#160;primitive vertebrate animals like frogs.</span></p>
<p><span class="font64">The increase in model size over time, due to the availability of faster CPUs,</span></p><div>
<p><span class="font63">10 10<sup>8&#160;</sup>10<sup>7&#160;</sup>10<sup>6</sup></span></p></div><div>
<p><span class="font64">Increasing dataset size over time</span></p></div><div>
<table border="1">
<tr><td>
<p></p></td><td>
<p dir="rtl"><span class="font64" style="font-weight:bold;font-style:italic;">*</span><span class="font63"> ־ *T</span></p></td></tr>
<tr><td>
<p></p></td><td rowspan="2">
<p><span class="font63">WMT</span></p></td></tr>
<tr><td style="vertical-align:bottom;">
<p><span class="font63">. /-</span></p></td></tr>
</table>
<p><span class="font63">Sports-IM</span></p>
<p><span class="font63">ImageNetlOk -</span></p>
<p><span class="font63">Public SVHN</span></p></div><div><div><img src="main-11.jpg" alt=""/></div></div><div>
<p><span class="font63">10</span></p></div><div>
<p dir="rtl"><span class="font62">נס</span></p>
<p dir="rtl"><span class="font61">מז</span></p>
<p><span class="font64">&quot;cl</span></p>
<p><span class="font63">p</span></p></div><div>
<p><span class="font63">ILSVRC 2014</span></p></div><div><div>
<p><span class="font63"><sup>Criminals</sup> &#160;&#160;&#160;ImageNet <sub>0</sub></span></p>
<p><span class="font64" style="font-weight:bold;font-style:italic;">^ \</span></p>
<p><span class="font63">CIFAR-10</span></p>
<p><span class="font63">MNIST ' ' f</span></p>
<p><span class="font63">Rotated T vs C</span></p>
<p><span class="font63">10<sup>4 </sup>10<sup>3&#160;</sup>10<sup>2</sup></span></p>
<p><span class="font63">10 10°</span></p><img src="main-12.jpg" alt=""/>
<p><span class="font63">1985 2000 2015</span></p>
<p><span class="font63">1950</span></p>
<p><span class="font63">1900</span></p></div></div>
<p><span class="font64">Figure 1.8: Dataset sizes have increased greatly over time. In the early 1900s, statisticians studied datasets using hundreds or thousands of manually compiled measurements (Garson,&#160;1900; Gosset, 1908; Anderson, 1935; Fisher, 1936). In the 1950s through 1980s, the pioneers&#160;of biologically inspired machine learning often worked with small, synthetic datasets, such&#160;as low-resolution bitmaps of letters, that were designed to incur low computational cost and&#160;demonstrate that neural networks were able to learn specific kinds of functions (Widrow&#160;and Hoff, 1960; Rumelhart </span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 1986b). In the 1980s and 1990s, machine learning&#160;became more statistical in nature and began to leverage larger datasets containing tens&#160;of thousands of examples such as the MNIST dataset (shown in Fig. 1.9) of scans of&#160;handwritten numbers (LeCun </span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 1998b). In the first decade of the 2000s, more&#160;sophisticated datasets of this same size, such as the CIFAR-10 dataset (Krizhevsky and&#160;Hinton, 2009) continued to be produced. Toward the end of that decade and throughout&#160;the first half of the 2010s, significantly larger datasets, containing hundreds of thousands&#160;to tens of millions of examples, completely changed what was possible with deep learning.&#160;These datasets included the public Street View House Numbers dataset (Netzer </span><span class="font64" style="font-style:italic;">et al.,&#160;</span><span class="font64">2011), various versions of the ImageNet dataset (Deng </span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 2009, 2010a; Russakovsky&#160;</span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 2014a), and the Sports-1M dataset (Karpathy </span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 2014). At the top of the&#160;graph, we see that datasets of translated sentences, such as IBM’s dataset constructed&#160;from the Canadian Hansard (Brown </span><span class="font64" style="font-style:italic;">et al.,</span><span class="font64"> 1990) and the WMT 2014 English to French&#160;dataset (Schwenk, 2014) are typically far ahead of other dataset sizes.</span></p><div><div><img src="main-13.jpg" alt=""/>
<p><span class="font64">Figure 1.9: Example inputs from the MNIST dataset. The “NIST” stands for National Institute of Standards and Technology, the agency that originally collected this data.&#160;The “M” stands for “modified,” since the data has been preprocessed for easier use with&#160;machine learning algorithms. The MNIST dataset consists of scans of handwritten digits&#160;and associated labels describing which digit 0-9 is contained in each image. This simple&#160;classification problem is one of the simplest and most widely used tests in deep learning&#160;research. It remains popular despite being quite easy for modern techniques to solve.&#160;Geoffrey Hinton has described it as “the </span><span class="font64" style="font-style:italic;">drosophila</span><span class="font64"> of machine learning,” meaning that&#160;it allows machine learning researchers to study their algorithms in controlled laboratory&#160;conditions, much as biologists often study fruit flies.</span></p></div></div>
<p><span class="font64">the advent of general purpose GPUs (described in Sec. 12.1.2), faster network connectivity and better software infrastructure for distributed computing, is one of&#160;the most important trends in the history of deep learning. This trend is generally&#160;expected to continue well into the future.</span></p><h5><a id="bookmark6"></a><span class="font64" style="font-weight:bold;">1.2.4 Increasing Accuracy, Complexity and Real-World Impact</span></h5>
<p><span class="font64">Since the 1980s, deep learning has consistently improved in its ability to provide accurate recognition or prediction. Moreover, deep learning has consistently been&#160;applied with success to broader and broader sets of applications.</span></p>
<p><span class="font64">The earliest deep models were used to recognize individual objects in tightly cropped, extremely small images (Rumelhart </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 1986a). Since then there has&#160;been a gradual increase in the size of images neural networks could process. Modern&#160;object recognition networks process rich high-resolution photographs and do not&#160;have a requirement that the photo be cropped near the object to be recognized&#160;(Krizhevsky </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2012). Similarly, the earliest networks could only recognize&#160;two kinds of objects (or in some cases, the absence or presence of a single kind of&#160;object), while these modern networks typically recognize at least 1,000 different&#160;categories of objects. The largest contest in object recognition is the ImageNet&#160;Large-Scale Visual Recognition Challenge (ILSVRC) held each year. A dramatic&#160;moment in the meteoric rise of deep learning came when a convolutional network&#160;won this challenge for the first time and by a wide margin, bringing down the&#160;state-of-the-art top-5 error rate from 26.1% to 15.3% (Krizhevsky </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2012),&#160;meaning that the convolutional network produces a ranked list of possible categories&#160;for each image and the correct category appeared in the first five entries of this&#160;list for all but 15.3% of the test examples. Since then, these competitions are&#160;consistently won by deep convolutional nets, and as of this writing, advances in&#160;deep learning have brought the latest top-5 error rate in this contest down to 3.6%,&#160;as shown in Fig. 1.12.</span></p>
<p><span class="font64">Deep learning has also had a dramatic impact on speech recognition. After improving throughout the 1990s, the error rates for speech recognition stagnated&#160;starting in about 2000. The introduction of deep learning (Dahl </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2010; Deng&#160;</span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2010b; Seide </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2011; Hinton </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2012a) to speech recognition resulted&#160;in a sudden drop of error rates, with some error rates cut in half. We will explore&#160;this history in more detail in Sec. 12.3.</span></p>
<p><span class="font64">Deep networks have also had spectacular successes for pedestrian detection and image segmentation (Sermanet </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2013; Farabet </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2013; Couprie </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span></p>
<p><span class="font64">2013) and yielded superhuman performance in traffic sign classification (Ciresan</span></p><div>
<p><span class="font63">10<a id="footnote1"></a><sup><a href="#bookmark7">1</a></sup><sup> <a id="footnote2"></a><a href="#bookmark8">2</a> <a id="footnote3"></a><a href="#bookmark9">3</a> <a id="footnote4"></a><a href="#bookmark10">4</a> <a id="footnote5"></a><a href="#bookmark11">5</a> <a id="footnote6"></a><a href="#bookmark12">6</a> <a id="footnote7"></a><a href="#bookmark13">7</a> <a id="footnote8"></a><a href="#bookmark14">8</a> <a id="footnote9"></a><a href="#bookmark15">9</a> <a id="footnote10"></a><a href="#bookmark16">10</a></sup></span></p></div><div>
<p><span class="font64">a</span></p>
<p><span class="font7">o</span></p>
<p><span class="font64" style="font-weight:bold;font-style:italic;">u</span></p>
<p><span class="font63">03</span></p>
<p><span class="font64">a</span></p>
<p><span class="font61">f-H</span></p>
<p><span class="font64" style="font-style:italic;">&lt;D</span></p>
<p><span class="font63">co</span></p>
<p><span class="font64">a</span></p>
<p><span class="font7">o</span></p></div><div>
<p><span class="font63">10'</span></p></div><div>
<p><span class="font64">o</span></p>
<p><span class="font64" style="font-style:italic;">&lt;D</span></p>
<p><span class="font64">a</span></p>
<p><span class="font64">s</span></p>
<p><span class="font7">o</span></p>
<p><span class="font64">O</span></p></div><div>
<p><span class="font63">10<sup>2</sup></span></p></div><div>
<p><span class="font63">10<sup>1</sup></span></p></div><div><div><img src="main-14.jpg" alt=""/></div></div><div>
<p><span class="font63">1950 &#160;&#160;&#160;1985&#160;&#160;&#160;&#160;2000&#160;&#160;&#160;&#160;2015</span></p></div>
<p><span class="font64">Figure 1.10: Initially, the number of connections between neurons in artificial neural networks was limited by hardware capabilities. Today, the number of connections between&#160;neurons is mostly a design consideration. Some artificial neural networks have nearly as&#160;many connections per neuron as a cat, and it is quite common for other neural networks&#160;to have as many connections per neuron as smaller mammals like mice. Even the human&#160;brain does not have an exorbitant amount of connections per neuron. Biological neural&#160;network sizes from Wikipedia (2015).</span></p>
<p><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2012).</span></p>
<p><span class="font64">At the same time that the scale and accuracy of deep networks has increased, so has the complexity of the tasks that they can solve. Goodfellow </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.</span><span class="font64"> (2014d)&#160;showed that neural networks could learn to output an entire sequence of characters&#160;transcribed from an image, rather than just identifying a single object. Previously,&#160;it was widely believed that this kind of learning required labeling of the individual&#160;elements of the sequence (Gulgehre and Bengio, 2013). Recurrent neural networks,&#160;such as the LSTM sequence model mentioned above, are now used to model&#160;relationships between </span><span class="font64" style="font-weight:bold;font-style:italic;">sequences</span><span class="font64"> and other </span><span class="font64" style="font-weight:bold;font-style:italic;">sequences</span><span class="font64"> rather than just fixed inputs.&#160;This sequence-to-sequence learning seems to be on the cusp of revolutionizing&#160;another application: machine translation (Sutskever </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2014; Bahdanau </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,&#160;</span><span class="font64">2015).</span></p>
<p><span class="font64">This trend of increasing complexity has been pushed to its logical conclusion with the introduction of neural Turing machines (Graves </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2014a) that learn&#160;to read from memory cells and write arbitrary content to memory cells. Such&#160;neural networks can learn simple programs from examples of desired behavior. For&#160;example, they can learn to sort lists of numbers given examples of scrambled and&#160;sorted sequences. This self-programming technology is in its infancy, but in the&#160;future could in principle be applied to nearly any task.</span></p>
<p><span class="font64">Another crowning achievement of deep learning is its extension to the domain of </span><span class="font64" style="font-weight:bold;font-style:italic;">reinforcement learning.</span><span class="font64"> In the context of reinforcement learning, an autonomous&#160;agent must learn to perform a task by trial and error, without any guidance from&#160;the human operator. DeepMind demonstrated that a reinforcement learning system&#160;based on deep learning is capable of learning to play Atari video games, reaching&#160;human-level performance on many tasks (Mnih </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2015). Deep learning has&#160;also significantly improved the performance of reinforcement learning for robotics&#160;(Finn </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2015).</span></p>
<p><span class="font64">Many of these applications of deep learning are highly profitable. Deep learning is now used by many top technology companies including Google, Microsoft,&#160;Facebook, IBM, Baidu, Apple, Adobe, Netflix, NVIDIA and NEC.</span></p>
<p><span class="font64">Advances in deep learning have also depended heavily on advances in software infrastructure. Software libraries such as Theano (Bergstra </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2010; Bastien&#160;</span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2012), PyLearn2 (Goodfellow </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2013c), Torch (Collobert </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2011b),&#160;DistBelief (Dean </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2012), Caffe (Jia, 2013), MXNet (Chen </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2015), and&#160;TensorFlow (Abadi </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2015) have all supported important research projects or&#160;commercial products.</span></p>
<p><span class="font64">Deep learning has also made contributions back to other sciences. Modern convolutional networks for object recognition provide a model of visual processing&#160;that neuroscientists can study (DiCarlo, 2013). Deep learning also provides useful&#160;tools for processing massive amounts of data and making useful predictions in&#160;scientific fields. It has been successfully used to predict how molecules will interact&#160;in order to help pharmaceutical companies design new drugs (Dahl </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2014),&#160;to search for subatomic particles (Baldi </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2014), and to automatically parse&#160;microscope images used to construct a 3-D map of the human brain (Knowles-Barley </span><span class="font64" style="font-weight:bold;font-style:italic;">et al.,</span><span class="font64"> 2014). We expect deep learning to appear in more and more scientific&#160;fields in the future.</span></p>
<p><span class="font64">In summary, deep learning is an approach to machine learning that has drawn heavily on our knowledge of the human brain, statistics and applied math as it&#160;developed over the past several decades. In recent years, it has seen tremendous&#160;growth in its popularity and usefulness, due in large part to more powerful computers, larger datasets and techniques to train deeper networks. The years ahead&#160;are full of challenges and opportunities to improve deep learning even further and&#160;bring it to new frontiers.</span></p>
<p><span class="font69">10<sup>11</sup></span></p><div><div><img src="main-15.jpg" alt=""/></div></div><div><div><img src="main-16.jpg" alt=""/>
<p><span class="font64">Figure 1.11: Since the introduction of hidden units, artificial neural networks have doubled in size roughly every 2.4 years. Biological neural network sizes from Wikipedia (2015).</span></p></div></div>
<p><span class="font69">10<sup>10</sup></span></p>
<p><span class="font69">10<sup>9</sup></span></p>
<p><span class="font69">10<sup>8</sup></span></p>
<p><span class="font69">10<sup>7</sup></span></p>
<p><span class="font69">10<sup>6</sup></span></p>
<p><span class="font69">10<sup>5</sup></span></p>
<p><span class="font69">10<sup>4</sup></span></p>
<p><span class="font69">10<sup>3</sup></span></p>
<p><span class="font69">10<sup>2</sup></span></p>
<p><span class="font69">10<sup>1</sup></span></p>
<p><span class="font69">10<sup>0</sup></span></p>
<p dir="rtl"><span class="font69"><sup>1</sup>־10<sup> 2</sup>־10</span></p>
<p><span class="font62">1. &#160;&#160;&#160;Perceptron (Rosenblatt, 1958, 1962)</span></p>
<p><span class="font62">2. &#160;&#160;&#160;Adaptive linear element (Widrow and Hoff, 1960)</span></p>
<p><span class="font62">3. &#160;&#160;&#160;Neocognitron (Fukushima, 1980)</span></p>
<p><span class="font62">4. &#160;&#160;&#160;Early back-propagation network (Rumelhart </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 1986b)</span></p>
<p><span class="font62">5. &#160;&#160;&#160;Recurrent neural network for speech recognition (Robinson and Fallside, 1991)</span></p>
<p><span class="font62">6. &#160;&#160;&#160;Multilayer perceptron for speech recognition (Bengio </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 1991)</span></p>
<p><span class="font62">7. &#160;&#160;&#160;Mean field sigmoid belief network (Saul </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 1996)</span></p>
<p><span class="font62">8. &#160;&#160;&#160;LeNet-5 (LeCun </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 1998b)</span></p>
<p><span class="font62">9. &#160;&#160;&#160;Echo state network (Jaeger and Haas, 2004)</span></p>
<p><span class="font62">10. &#160;&#160;&#160;Deep belief network (Hinton </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2006)</span></p>
<p><span class="font62">11. &#160;&#160;&#160;GPU-accelerated convolutional network (Chellapilla </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2006)</span></p>
<p><span class="font62">12. &#160;&#160;&#160;Deep Boltzmann machine (Salakhutdinov and Hinton, 2009a)</span></p>
<p><span class="font62">13. &#160;&#160;&#160;GPU-accelerated deep belief network (Raina </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2009)</span></p>
<p><span class="font62">14. &#160;&#160;&#160;Unsupervised convolutional network (Jarrett </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2009)</span></p>
<p><span class="font62">15. &#160;&#160;&#160;GPU-accelerated multilayer perceptron (Ciresan </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2010)</span></p>
<p><span class="font62">16. &#160;&#160;&#160;OMP-1 network (Coates and Ng, 2011)</span></p>
<p><span class="font62">17. &#160;&#160;&#160;Distributed autoencoder (Le </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2012)</span></p>
<p><span class="font62">18. &#160;&#160;&#160;Multi-GPU convolutional network (Krizhevsky </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2012)</span></p>
<p><span class="font62">19. &#160;&#160;&#160;COTS HPC unsupervised convolutional network (Coates </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2013)</span></p>
<p><span class="font62">20. &#160;&#160;&#160;GoogLeNet (Szegedy </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2014a)</span></p><div><div><img src="main-17.jpg" alt=""/>
<p><span class="font64">Figure 1.12: Since deep networks reached the scale necessary to compete in the ImageNet Large Scale Visual Recognition Challenge, they have consistently won the competition&#160;every year, and yielded lower and lower error rates each time. Data from Russakovsky&#160;</span><span class="font64" style="font-style:italic;">et al.</span><span class="font64"> (2014b) and He </span><span class="font64" style="font-style:italic;">et al.</span><span class="font64"> (2015).</span></p></div></div>
<p><span class="font66" style="font-weight:bold;">Part I</span></p>
<p><span class="font67" style="font-weight:bold;">Applied Math and Machine Learning Basics</span></p>
<p><span class="font64">This part of the book introduces the basic mathematical concepts needed to understand deep learning. We begin with general ideas from applied math that&#160;allow us to define functions of many variables, find the highest and lowest points&#160;on these functions and quantify degrees of belief.</span></p>
<p><span class="font64">Next, we describe the fundamental goals of machine learning. We describe how to accomplish these goals by specifying a model that represents certain beliefs,&#160;designing a cost function that measures how well those beliefs correspond with&#160;reality and using a training algorithm to minimize that cost function.</span></p>
<p><span class="font64">This elementary framework is the basis for a broad variety of machine learning algorithms, including approaches to machine learning that are not deep. In the&#160;subsequent parts of the book, we develop deep learning algorithms within this&#160;framework.</span></p>
<p><a id="bookmark7"><sup><a href="#footnote1">1</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;Adaptive linear element (Widrow and Hoff, 1960)</span></p>
<p><a id="bookmark8"><sup><a href="#footnote2">2</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;Neocognitron (Fukushima, 1980)</span></p>
<p><a id="bookmark9"><sup><a href="#footnote3">3</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;GPU-accelerated convolutional network (Chellapilla </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2006)</span></p>
<p><a id="bookmark10"><sup><a href="#footnote4">4</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;Deep Boltzmann machine (Salakhutdinov and Hinton, 2009a)</span></p>
<p><a id="bookmark11"><sup><a href="#footnote5">5</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;Unsupervised convolutional network (Jarrett </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2009)</span></p>
<p><a id="bookmark12"><sup><a href="#footnote6">6</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;GPU-accelerated multilayer perceptron (Ciresan </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2010)</span></p>
<p><a id="bookmark13"><sup><a href="#footnote7">7</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;Distributed autoencoder (Le </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2012)</span></p>
<p><a id="bookmark14"><sup><a href="#footnote8">8</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;Multi-GPU convolutional network (Krizhevsky </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2012)</span></p>
<p><a id="bookmark15"><sup><a href="#footnote9">9</a></sup></a></p>
<p><span class="font62"> &#160;&#160;&#160;COTS HPC unsupervised convolutional network (Coates </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2013)</span></p>
<p><a id="bookmark16"><sup><a href="#footnote10">10</a></sup></a></p>
<p><span class="font62"> GoogLeNet (Szegedy </span><span class="font62" style="font-style:italic;">et al.,</span><span class="font62"> 2014a)</span></p>
</body>
</html>